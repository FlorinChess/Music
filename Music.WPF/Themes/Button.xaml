<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}" x:Key="ButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RoundFocusVisualStyle}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5" 
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="Center" 
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource DefaultFocusVisualStyle}" />
        <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="45" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Center" 
                            Content="{TemplateBinding Content}" 
                            Focusable="False"
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBrushTransparent}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MusicPlayerButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="45" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ImageSelectionButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="40" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Transparent85BlackBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CommandButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="BorderBrush" Value="{StaticResource GrayBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0 4 8 4" />
        <Setter Property="Padding" Value="6 0" />
    </Style>

    <!-- Selected playlist Button-->
    <Style x:Key="SelectedPlaylistFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        CornerRadius="50"
                        Background="{StaticResource TransparentBrush}"
                        BorderBrush="{StaticResource WhiteBrush}"
                        BorderThickness="2"
                        />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PlaylistPlayAllButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Background" Value="{DynamicResource PrimaryDark}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource SelectedPlaylistFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50">
                        <Path
                            x:Name="Symbol"
                            Data="M16 37.85v-28l22 14Z" 
                            Fill="{TemplateBinding Foreground}" 
                            Height="30" 
                            Margin="4 0 0 0"
                            Stretch="Fill" 
                            Width="25" 
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryLight}" />
                <Setter Property="Foreground" Value="{StaticResource MainBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="OpenQueueButton">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center" 
                            SnapsToDevicePixels="True"
                            VerticalAlignment="Center" 
                            />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DropdownTextButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="8 10" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MenuItemHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="ModalButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="BorderBrush" Value="{StaticResource GrayBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="60" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="LinkButton">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RoundFocusVisualStyle}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <TextBlock 
                            x:Name="text" 
                            Foreground="{DynamicResource Primary}"
                            Style="{StaticResource PlaceholderText}"
                            Text="{TemplateBinding Content}"
                            /> 
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextDecorations" TargetName="text" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>