<UserControl x:Class="Music.WPF.Components.MusicPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:Music.WPF.ViewModels" 
             xmlns:extensions="clr-namespace:Music.WPF.Extensions"
             xmlns:custom="clr-namespace:Music.CustomControls.DropdownMenu;assembly=Music.CustomControls"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance {x:Type viewmodels:MusicPlayerViewModel}, IsDesignTimeCreatable=False}"
             d:DesignHeight="100" d:DesignWidth="700" 
             Background="{StaticResource MusicPlayerGraySurfaceBrush}"
             IsEnabled="{Binding IsEnabled}"
             IsTabStop="False">
    <UserControl.Resources>
        <!-- Button Content Styles -->
        <Style TargetType="{x:Type Path}">
            <Setter Property="Stretch" Value="Fill" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Fill" Value="{StaticResource WhiteBrush}" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel 
            Orientation="Horizontal" 
            Grid.Column="1" Grid.Row="1"
            HorizontalAlignment="Center">
            <TextBlock 
                Style="{StaticResource MusicPlayerSliderText}"
                Text="{Binding TrackCurrentPosition, Converter={StaticResource TimeSpanToStringConverter}, FallbackValue='00:00'}"
                />
            <Slider 
                x:Name="TrackSlider"
                extensions:SliderExtension.DragStartedCommand="{Binding SeekDragStartedCommand}"
                extensions:SliderExtension.DragCompletedCommand="{Binding SeekDragCompletedCommand}"
                IsEnabled="{Binding CommandButtonsEnabled}"
                Maximum="{Binding TrackLength}"
                Style="{StaticResource MusicPlayerSlider}"
                Value="{Binding TrackCurrentPosition, FallbackValue=5}"
                VerticalAlignment="Center"
                Width="210" 
                />
            <TextBlock 
                Style="{StaticResource MusicPlayerSliderText}"
                Text="{Binding TrackLength, Converter={StaticResource TimeSpanToStringConverter}, FallbackValue='00:00'}"
                />
        </StackPanel>

        <Button 
            x:Name="leftPanel" 
            Grid.RowSpan="2"
            Command="{Binding NavigateToNowPlayingCommand}"
            FocusVisualStyle="{StaticResource DefaultFocusVisualStyle}"
            Style="{StaticResource OpenQueueButton}"
            ToolTip="{Binding CurrentTrack.Title}"
            Visibility="{Binding LeftPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <DockPanel>
                <Image 
                    Height="80" 
                    Margin="10"
                    SnapsToDevicePixels="True"
                    Source="{Binding CurrentTrack.FilePath, Converter={StaticResource FilePathToImageConverter}}" 
                    Width="80" 
                    />
                <StackPanel VerticalAlignment="Center">
                    <TextBlock Text="{Binding CurrentTrack.Title, FallbackValue='Current Track Title'}" FontWeight="Thin" Foreground="{StaticResource WhiteBrush}" FontSize="24" TextTrimming="WordEllipsis" Margin="2" />
                    <TextBlock Text="{Binding CurrentTrack.Artist, FallbackValue='Current Track Artist'}" FontWeight="DemiBold" Foreground="{StaticResource WhiteBrush}" FontSize="15" TextTrimming="WordEllipsis" Margin="2"/>
                </StackPanel>
            </DockPanel>
        </Button>
        
        <StackPanel 
            Grid.Column="1" 
            HorizontalAlignment="Center"
            Orientation="Horizontal">

            <CheckBox 
                IsChecked="{Binding IsShuffleEnabled}" 
                Style="{StaticResource MusicPlayerCheckBox}"
                ToolTip="{Binding ShuffleButtonToolTip}">
                <Path 
                    Data="M29.05 40.5v-3h6.25l-9.2-9.15 2.1-2.15 9.3 9.2v-6.35h3V40.5Zm-19.45 0-2.1-2.15 27.9-27.9h-6.35v-3H40.5V18.9h-3v-6.3Zm10.15-18.7L7.5 9.6l2.15-2.15 12.25 12.2Z" 
                    Style="{StaticResource DefaultIcon}"
                    />
            </CheckBox>

            <Button 
                Command="{Binding PlayPreviousCommand}" 
                IsEnabled="{Binding CommandButtonsEnabled}"
                Style="{StaticResource MusicPlayerButton}"
                ToolTip="Previous">
                <Path 
                    Data="M11 36V12h3v24Zm26 0L19.7 24 37 12Z" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" 
                    Style="{StaticResource DefaultIcon}"
                    />
            </Button>

            <CheckBox 
                Command="{Binding PlayPauseCommand}" 
                IsChecked="{Binding IsPlaying, FallbackValue=False}" 
                IsEnabled="{Binding CommandButtonsEnabled}"
                ToolTip="{Binding PlayPauseButtonToolTip}"
                Style="{StaticResource MusicPlayerPlayPauseCheckBox}"
                />

            <Button 
                Command="{Binding PlayNextCommand}" 
                IsEnabled="{Binding CommandButtonsEnabled}"
                ToolTip="Next"
                Style="{StaticResource MusicPlayerButton}">
                <Path 
                    Data="M34 36V12h3v24Zm-23 0V12l17.3 12Z" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                    Style="{StaticResource DefaultIcon}"
                    />
            </Button>
            
            <CheckBox 
                IsChecked="{Binding IsRepeatEnabled}" 
                Style="{StaticResource MusicPlayerCheckBox}"
                ToolTip="{Binding RepeatButtonToolTip}">
                <Path 
                    Data="M24 44q-3.75 0-7.025-1.4-3.275-1.4-5.725-3.85Q8.8 36.3 7.4 33.025 6 29.75 6 26h3q0 6.25 4.375 10.625T24 41q6.25 0 10.625-4.375T39 26q0-6.25-4.25-10.625T24.25 11H23.1l3.65 3.65-2.05 2.1-7.35-7.35 7.35-7.35 2.05 2.05-3.9 3.9H24q3.75 0 7.025 1.4 3.275 1.4 5.725 3.85 2.45 2.45 3.85 5.725Q42 22.25 42 26q0 3.75-1.4 7.025-1.4 3.275-3.85 5.725-2.45 2.45-5.725 3.85Q27.75 44 24 44Z" 
                    Style="{StaticResource DefaultIcon}"
                    />
            </CheckBox>
        </StackPanel>

        
        <StackPanel 
            x:Name="rightPanel" 
            Grid.Column="2" 
            Margin="0 0 30 0"
            Orientation="Horizontal" 
            HorizontalAlignment="Right">
            <CheckBox 
                ToolTip="{Binding MuteButtonToolTip}"
                Command="{Binding MuteCommand}" 
                IsChecked="{Binding IsMuted}"
                Style="{DynamicResource MusicPlayerCheckBox}">
                <Path 
                    Data="{Binding Value, ElementName=VolumeSlider, Converter={StaticResource DoubleToVectorConverter}}" 
                    Stretch="Uniform"
                    Style="{StaticResource DefaultIcon}"
                    />
            </CheckBox>
            <Slider 
                x:Name="VolumeSlider"
                AutoToolTipPlacement="TopLeft"
                extensions:SliderExtension.DragStartedCommand="{Binding VolumeDragStartedCommand}"
                HorizontalAlignment="Right"
                IsMoveToPointEnabled="True"
                Maximum="100" 
                Margin="0 0 10 0"
                Style="{StaticResource MusicPlayerSlider}"
                Value="{Binding Volume, Mode=TwoWay, FallbackValue=10}"
                VerticalAlignment="Center"
                />

            <custom:DropdownMenu 
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay}"
                FocusVisualStyle="{StaticResource RoundFocusVisualStyle}"
                PopupBorderBrush="{StaticResource MainBackgroundBrush}"
                PopupPlacement="Top"
                ToolTip="More options">
                <StackPanel>
                    <Button
                        Command="{Binding ClearQueueCommand}"
                        Content="Clear queue"
                        Style="{DynamicResource DropdownTextButton}"
                        />
                    <Button
                        Command="{Binding OpenEqualizerCommand}"
                        Content="Equalizer"
                        Style="{DynamicResource DropdownTextButton}"
                        />
                </StackPanel>
            </custom:DropdownMenu>
        </StackPanel>
    </Grid>
</UserControl>
